// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaCertoForms.Models;

namespace TaCertoForms.Migrations
{
    [DbContext(typeof(TaCertoFormsContext))]
    [Migration("20190924202700_Iteration")]
    partial class Iteration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TaCerto")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaCertoForms.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<int>("IdTurmaDisciplinaProfessor");

                    b.Property<bool>("IsAleatorio");

                    b.Property<bool>("IsProva");

                    b.Property<int>("NumeroTentativas");

                    b.HasKey("IdAtividade");

                    b.HasIndex("IdTurmaDisciplinaProfessor");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("TaCertoForms.Models.AtividadeRespostaAluno", b =>
                {
                    b.Property<int>("IdAtividadeRespostaAluno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEnvio");

                    b.Property<int>("IdAluno");

                    b.Property<int>("IdAtividade");

                    b.Property<float>("Nota");

                    b.Property<string>("TempoTotal");

                    b.HasKey("IdAtividadeRespostaAluno");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdAtividade");

                    b.ToTable("AtividadeRespostaAlunos");
                });

            modelBuilder.Entity("TaCertoForms.Models.Disciplina", b =>
                {
                    b.Property<int>("IdDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("IdDisciplina");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("TaCertoForms.Models.DisciplinaProfessor", b =>
                {
                    b.Property<int>("IdDisciplinaProfessor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDisciplina");

                    b.Property<int>("IdPessoa");

                    b.HasKey("IdDisciplinaProfessor");

                    b.HasIndex("IdDisciplina");

                    b.HasIndex("IdPessoa");

                    b.ToTable("DisciplinaProfessors");
                });

            modelBuilder.Entity("TaCertoForms.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<string>("Numero");

                    b.Property<string>("Pais");

                    b.Property<string>("Rua");

                    b.Property<string>("UF");

                    b.HasKey("IdEndereco");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("TaCertoForms.Models.Instituicao", b =>
                {
                    b.Property<int>("IdInstituicao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ");

                    b.Property<int>("IdEnderecoCobranca");

                    b.Property<int>("IdEnderecoPrincipal");

                    b.Property<string>("NomeFantasia");

                    b.Property<string>("RazaoSocial");

                    b.HasKey("IdInstituicao");

                    b.HasIndex("IdEnderecoCobranca");

                    b.HasIndex("IdEnderecoPrincipal");

                    b.ToTable("Instituicaos");
                });

            modelBuilder.Entity("TaCertoForms.Models.Licenca", b =>
                {
                    b.Property<int>("IdLicenca")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdInstituicao");

                    b.Property<DateTime>("InicioLicenca");

                    b.Property<int>("NumeroDeLinceca");

                    b.Property<DateTime>("ValidadeLicenca");

                    b.HasKey("IdLicenca");

                    b.HasIndex("IdInstituicao");

                    b.ToTable("Licencas");
                });

            modelBuilder.Entity("TaCertoForms.Models.LogLogin", b =>
                {
                    b.Property<int>("IdLogLoggin")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceId");

                    b.Property<DateTime>("HoraAcesso");

                    b.Property<int>("IdPessoa");

                    b.Property<string>("Plataforma");

                    b.HasKey("IdLogLoggin");

                    b.HasIndex("IdPessoa");

                    b.ToTable("LogLogins");
                });

            modelBuilder.Entity("TaCertoForms.Models.Midia", b =>
                {
                    b.Property<int>("IdMidia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caminho");

                    b.Property<string>("Extensao");

                    b.Property<int>("IdEntidade");

                    b.Property<int>("Ordem");

                    b.Property<string>("TipoEntidade");

                    b.HasKey("IdMidia");

                    b.ToTable("Midias");
                });

            modelBuilder.Entity("TaCertoForms.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfils");
                });

            modelBuilder.Entity("TaCertoForms.Models.PerfilPessoa", b =>
                {
                    b.Property<int>("IdPerfilPessoa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPerfil");

                    b.Property<int>("IdPessoa");

                    b.HasKey("IdPerfilPessoa");

                    b.HasIndex("IdPerfil");

                    b.HasIndex("IdPessoa");

                    b.ToTable("PerfilPessoas");
                });

            modelBuilder.Entity("TaCertoForms.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<string>("Email");

                    b.Property<int>("IdInstituicao");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("IdPessoa");

                    b.HasIndex("IdInstituicao");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("TaCertoForms.Models.PessoaLicenca", b =>
                {
                    b.Property<int>("IdPessoaLicenca")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdLicenca");

                    b.Property<int>("IdPessoa");

                    b.Property<bool>("IsAtivo");

                    b.HasKey("IdPessoaLicenca");

                    b.HasIndex("IdLicenca");

                    b.HasIndex("IdPessoa")
                        .IsUnique();

                    b.ToTable("PessoaLicencas");
                });

            modelBuilder.Entity("TaCertoForms.Models.Questao", b =>
                {
                    b.Property<int>("IdQuestao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Enunciado");

                    b.Property<int>("IdAtividade");

                    b.Property<int>("IdTipoQuestao");

                    b.Property<string>("JsonQuestao");

                    b.Property<int>("PesoNota");

                    b.Property<string>("Titulo");

                    b.HasKey("IdQuestao");

                    b.HasIndex("IdAtividade");

                    b.HasIndex("IdTipoQuestao");

                    b.ToTable("Questaos");
                });

            modelBuilder.Entity("TaCertoForms.Models.QuestaoRespostaAluno", b =>
                {
                    b.Property<int>("IdQuestaoRespostaAluno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAtividadeRespostaAluno");

                    b.Property<int>("IdQuestao");

                    b.Property<string>("JsonResposta");

                    b.Property<float>("Nota");

                    b.Property<int>("NumAcerto");

                    b.Property<int>("NumErro");

                    b.Property<int>("TempoEmMilisegundos");

                    b.HasKey("IdQuestaoRespostaAluno");

                    b.HasIndex("IdAtividadeRespostaAluno");

                    b.HasIndex("IdQuestao");

                    b.ToTable("QuestaoRespostaAlunos");
                });

            modelBuilder.Entity("TaCertoForms.Models.TipoQuestao", b =>
                {
                    b.Property<int>("IdTipoQuestao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("IdTipoQuestao");

                    b.ToTable("TipoQuestaos");
                });

            modelBuilder.Entity("TaCertoForms.Models.Turma", b =>
                {
                    b.Property<int>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ano");

                    b.Property<int>("IdInstituicao");

                    b.Property<string>("Periodo");

                    b.Property<string>("Serie");

                    b.HasKey("IdTurma");

                    b.HasIndex("IdInstituicao");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("TaCertoForms.Models.TurmaAluno", b =>
                {
                    b.Property<int>("IdTurmaAluno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAluno");

                    b.Property<int>("IdTurma");

                    b.HasKey("IdTurmaAluno");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdTurma");

                    b.ToTable("TurmaAlunos");
                });

            modelBuilder.Entity("TaCertoForms.Models.TurmaDisciplinaProfessor", b =>
                {
                    b.Property<int>("IdTurmaDisciplinaProfessor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDisciplinaProfessor");

                    b.Property<int>("IdTurma");

                    b.HasKey("IdTurmaDisciplinaProfessor");

                    b.HasIndex("IdDisciplinaProfessor");

                    b.HasIndex("IdTurma");

                    b.ToTable("TurmaDisciplinaProfessors");
                });

            modelBuilder.Entity("TaCertoForms.Models.Atividade", b =>
                {
                    b.HasOne("TaCertoForms.Models.TurmaDisciplinaProfessor", "TurmaDisciplinaProfessor")
                        .WithMany("Atividades")
                        .HasForeignKey("IdTurmaDisciplinaProfessor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.AtividadeRespostaAluno", b =>
                {
                    b.HasOne("TaCertoForms.Models.Pessoa", "Aluno")
                        .WithMany("AtividadeRespostaAlunoList")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Atividade", "Atividade")
                        .WithMany("AtividadeRespostaAlunoList")
                        .HasForeignKey("IdAtividade")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TaCertoForms.Models.DisciplinaProfessor", b =>
                {
                    b.HasOne("TaCertoForms.Models.Disciplina", "Disciplina")
                        .WithMany("DisciplinaProfessor")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Pessoa", "Professor")
                        .WithMany("DisciplinaProfessorList")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.Instituicao", b =>
                {
                    b.HasOne("TaCertoForms.Models.Endereco", "EnderecoCobranca")
                        .WithMany("EnderecoCobrancaList")
                        .HasForeignKey("IdEnderecoCobranca")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TaCertoForms.Models.Endereco", "EnderecoPrincipal")
                        .WithMany("EnderecoPrincipalList")
                        .HasForeignKey("IdEnderecoPrincipal")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TaCertoForms.Models.Licenca", b =>
                {
                    b.HasOne("TaCertoForms.Models.Instituicao", "Instituicao")
                        .WithMany("LicencaList")
                        .HasForeignKey("IdInstituicao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.LogLogin", b =>
                {
                    b.HasOne("TaCertoForms.Models.Pessoa", "Pessoa")
                        .WithMany("LogLoginList")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.PerfilPessoa", b =>
                {
                    b.HasOne("TaCertoForms.Models.Perfil", "Perfil")
                        .WithMany("PerfilPessoas")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Pessoa", "Pessoa")
                        .WithMany("PerfilPessoas")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.Pessoa", b =>
                {
                    b.HasOne("TaCertoForms.Models.Instituicao", "Instituicao")
                        .WithMany("PessoaList")
                        .HasForeignKey("IdInstituicao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.PessoaLicenca", b =>
                {
                    b.HasOne("TaCertoForms.Models.Licenca", "Licenca")
                        .WithMany("PessoaLicencaList")
                        .HasForeignKey("IdLicenca")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TaCertoForms.Models.Pessoa", "Pessoa")
                        .WithOne("PessoaLicenca")
                        .HasForeignKey("TaCertoForms.Models.PessoaLicenca", "IdPessoa")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TaCertoForms.Models.Questao", b =>
                {
                    b.HasOne("TaCertoForms.Models.Atividade", "Atividade")
                        .WithMany("QuestoeList")
                        .HasForeignKey("IdAtividade")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.TipoQuestao", "TipoQuestao")
                        .WithMany("QuestaoList")
                        .HasForeignKey("IdTipoQuestao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.QuestaoRespostaAluno", b =>
                {
                    b.HasOne("TaCertoForms.Models.AtividadeRespostaAluno", "AtividadeRespostaAluno")
                        .WithMany("QuestaoRespostaAlunoList")
                        .HasForeignKey("IdAtividadeRespostaAluno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Questao", "Questao")
                        .WithMany("QuestaoRespostaAlunoList")
                        .HasForeignKey("IdQuestao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TaCertoForms.Models.Turma", b =>
                {
                    b.HasOne("TaCertoForms.Models.Instituicao", "Instituicao")
                        .WithMany("TurmaList")
                        .HasForeignKey("IdInstituicao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaCertoForms.Models.TurmaAluno", b =>
                {
                    b.HasOne("TaCertoForms.Models.Pessoa", "Aluno")
                        .WithMany("TurmaAlunoList")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Turma", "Turma")
                        .WithMany("TurmaAlunoList")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TaCertoForms.Models.TurmaDisciplinaProfessor", b =>
                {
                    b.HasOne("TaCertoForms.Models.DisciplinaProfessor", "DisciplinaProfessor")
                        .WithMany("TurmaDisciplinaProfessorList")
                        .HasForeignKey("IdDisciplinaProfessor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaCertoForms.Models.Turma", "Turma")
                        .WithMany("TurmaDisciplinaProfessorList")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
