@model tacertoforms.Models.ViewModelAtividade

@{
    ViewBag.Title = "Create";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>Criação de Instituição</h1>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Início</a>
            </li>
            <li class="active">
                <a href="@Url.Action("Index", "Atividades")">Atividades</a>
            </li>
        </ol>
    </section>
    <section class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Novo Registro</h3>
                <a href="@Url.Action("Index", "Atividades")" class="btn btn-sm btn-default btn-flat pull-right">Voltar</a>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="col-xs-12">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("Turma + matéria")
                                @Html.EditorFor(model => model.IdTurmaDisciplinaProfessor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IdTurmaDisciplinaProfessor, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("Data de Início")
                                @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("Data Final")
                                @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("Número de tentativas")
                                @Html.EditorFor(model => model.NumeroTentativas, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NumeroTentativas, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("É aleatório")
                                @Html.EditorFor(model => model.IsAleatorio)
                                @Html.ValidationMessageFor(model => model.IsAleatorio, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.Label("É prova")
                                @Html.EditorFor(model => model.IsProva)
                                @Html.ValidationMessageFor(model => model.IsProva, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12" style="margin-top: 20px;">
                        <div class="row">
                            <div class="col-xs-12 form-group">
                                <!-- Custom Tabs (Pulled to the right) -->
                                <div class="nav-tabs-custom">
                                    <ul class="nav nav-tabs pull-right">
                                        <li class="active">
                                            <a href="#tab-listagem" data-toggle="tab" aria-expanded="true">
                                                Listagem de Questões&nbsp;<span id="label_Listagem_num" class="label label-primary pull-right">0</span>
                                            </a>
                                        </li>
                                        <li class="">
                                            <a href="#tab-certo-errado" data-toggle="tab" aria-expanded="false">
                                                Modo Certo e Errado&nbsp;<span id="label_CertoErrado_num" class="label label-primary pull-right">0</span>
                                            </a>
                                        </li>
                                        <li class="">
                                            <a href="#tab-lacuna" data-toggle="tab" aria-expanded="false">
                                                Modo Lacuna&nbsp;<span id="label_Lacuna_num" class="label label-primary pull-right">0</span>
                                            </a>
                                        </li>
                                        <li class="">
                                            <a href="#tab-coluna" data-toggle="tab" aria-expanded="false">
                                                Modo Coluna&nbsp;<span id="label_Coluna_num" class="label label-primary pull-right">0</span>
                                            </a>
                                        </li>
                                        <li class="">
                                            <a href="#tab-associacao" data-toggle="tab" aria-expanded="false">
                                                Modo Associação &nbsp;<span id="label_Associacao_num" class="label label-primary pull-right">0</span>
                                            </a>
                                        </li>
                                        <li class="pull-left header"><i class="fa fa-th"></i> Cadastro de Questões</li>
                                    </ul>
                                    <div class="tab-content">
                                        <!-- tab Listagem de Questões -->
                                        <div class="tab-pane active" id="tab-listagem">
                                            @Html.Partial("QuestoesListagem", @Model)
                                        </div>
                                        <!-- tab Certo e Errado -->
                                        <div class="tab-pane" id="tab-certo-errado">
                                            @Html.Partial("QuestoesCertoErrado", @Model)
                                        </div>
                                        <!-- tab Lacuna -->
                                        <div class="tab-pane" id="tab-lacuna">
                                            @Html.Partial("QuestoesLacuna", @Model)
                                        </div>
                                        <!-- tab Coluna -->
                                        <div class="tab-pane" id="tab-coluna">
                                            @Html.Partial("QuestoesColuna", @Model)
                                        </div>
                                        <!-- tab Associação -->
                                        <div class="tab-pane" id="tab-associacao">
                                            @Html.Partial("QuestoesAssociacao", @Model)
                                        </div>
                                        <!-- /.tab-content -->
                                    </div>
                                </div>
                                <!-- nav-tabs-custom -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <input type="button" value="Salvar" class="btn btn-primary pull-right" />
                </div>
            }
        </div>
    </section>
</div>

<script>
    $('#listagem').DataTable({ "language": dados_translate });
    $('#certo-errado-listagem').DataTable({ "language": dados_translate });
    $('#lacuna-listagem').DataTable({ "language": dados_translate });
    $('#coluna-listagem').DataTable({ "language": dados_translate });
    $('#associacao-listagem').DataTable({ "language": dados_translate });                       
    $('.js-example-basic-multiple').select2({
        tags: true,
        tokenSeparators: [',', ' ']
    });

    $('#numero-linhas').on('change', function () {               
        $('.linhas-input').html('');
        for (var i = 1; i <= $(this).val(); i++) {
            $('.linhas-input').append(
                '<div class="form-group col-xs-12 col-md-6">'+
                    '<input type="text" name="name" class="form-control" value="" />'+
                '</div>'+
                '<div class="form-group col-xs-12 col-md-6">' +
                    '<input type="text" name="name" class="form-control" value="" />'+
                '</div>'
            );
        }
    });
</script>

<style>
    .select2-container--default .select2-selection--multiple .select2-selection__choice{color: #000 !important}
</style>

<script>
var LabelNum = {
    _CertoErrado: 0,
    _Lacuna: 0,
    _Coluna: 0,
    _Associacao: 0,
    set CertoErrado(value){
        this._CertoErrado += value;
        document.getElementById("label_CertoErrado_num").innerHTML = this._CertoErrado;
        document.getElementById("label_Listagem_num").innerHTML = this._CertoErrado + this._Lacuna + this._Coluna + this._Associacao;
    },
    set Lacuna(value){
        this._Lacuna += value;
        document.getElementById("label_Lacuna_num").innerHTML = this._Lacuna;
        document.getElementById("label_Listagem_num").innerHTML = this._CertoErrado + this._Lacuna + this._Coluna + this._Associacao;
    },
    set Coluna(value){
        this._Coluna += value;
        document.getElementById("label_Coluna_num").innerHTML = this._Coluna;
        document.getElementById("label_Listagem_num").innerHTML = this._CertoErrado + this._Lacuna + this._Coluna + this._Associacao;
    },
    set Associacao(value){
        this._Associacao += value;
        document.getElementById("label_Associacao_num").innerHTML = this._Associacao;
        document.getElementById("label_Listagem_num").innerHTML = this._CertoErrado + this._Lacuna + this._Coluna + this._Associacao;
    }
};

function SendData(){
	var xhttp = new XMLHttpRequest();
    xhttp.open('POST', '/Atividades/Create');
    xhttp.setRequestHeader('Content-type', 'application/json;charset=UTF-8');
    xhttp.onload = function () {
        console.log("ok");
    };
    xhttp.send(MontarDados());
}
var ListaDeQuestoes = [];
function MontarDados(){
    var aux = [];
    for(var i = 0; i < ListaDeQuestoes.length; i++)
        if(ListaDeQuestoes[i] !== 'deleted')
            aux[aux.length] = ListaDeQuestoes[i];
    var atividade = {
        IdAtividade: 0,
        IdTurmaDisciplinaProfessor: parseInt(document.getElementById("IdTurmaDisciplinaProfessor").value),
        DataInicio: document.getElementById("DataInicio").value,
        DataFim: document.getElementById("DataFim").value,
        NumeroTentativas: parseInt(document.getElementById("NumeroTentativas").value),
        IsAleatorio: document.getElementById("IsAleatorio").checked,
        IsProva: document.getElementById("IsProva").checked,
        Questoes : aux
    };
    return JSON.stringify(atividade);
}
function AddQuestao(tq, t, e, j, pn){
    ListaDeQuestoes[ListaDeQuestoes.length] =
    {
        IdQuestao: 0,
        IdAtividade: 0,
        IdTipoQuestao: tq,
        Titulo: t,
        Enunciado: e,
        JsonQuestao: JSON.stringify(j),
        PesoNota: pn
    };
}
</script>