@model tacertoforms.Models.ViewModelAtividade
<!-- tab Lacuna -->
<div class="row">
    <div class="col-xs-12 col-md-6">
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.TextBox("IdQuestao", null, new { @id = "tabela-de-lacunaIdQuestao", @type = "hidden" })
                <div class="form-group col-xs-12">
                    @Html.Label("Título")
                    @Html.TextBox("Titulo", null, new { @class = "form-control", @id = "tabela-de-lacunaTitulo" })
                </div>
                <div class="form-group col-xs-12">
                    @Html.Label("Enunciado")
                    @Html.TextArea("Enunciado", null, new { @class = "form-control", @id = "tabela-de-lacunaEnunciado" })
                </div>
                <div class="form-group col-xs-12">
                    @Html.Label("Peso Nota")
                    @Html.TextBox("PesoNota", null, new { @class = "form-control", @type = "number", @step = ".01", @min = "0", @max = "1", @id = "tabela-de-lacunaPesoNota" })
                </div>
                <div class="form-group col-xs-12">
                    <label for="exampleInputFile">Adicionar Imagem</label>
                    <input type="file" id="exampleInputFile">
                </div>
                <div class="form-group col-xs-12">
                    @Html.Label("Frase")
                    <div id="tabela-de-lacunaFrase" class="form-control" onfocusin="hideShadow()" onfocusout="showShadow()" onkeyup="ChangeInputTextLacuna(this, document.getElementById('tabela-de-lacunaFrase-shadow'))" contenteditable="true"></div>
                    <div id="tabela-de-lacunaFrase-shadow" class="form-control" onclick="hideandfocus()"></div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.Label("Palavras Certas")
                    <div id="palavras-certas-lacuna" class="form-control" onclick="moveCursorToEnd(document.getElementById('palavras-certas-lacuna-span'))">
                        <span id="palavras-certas-lacuna-lista">
                            <span id="palavras-certas-lacuna-span" onfocusin="focusIn()" onfocusout="focusOut()" contenteditable="true" onkeyup="ChangeInputOpcoesLacuna(this, event)"></span>
                        </span>
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.Label("Palavras Erradas")
                    @Html.DropDownList("palavraserradas[]",
                    new SelectList(new List<String>()),
                    null,
                    new { @class = "select2 form-control", @multiple = "multiple", @id = "tabela-de-lacunaErradas" })
                </div>
                <div class="form-group col-xs-12">
                    <input type="button" value="Adicionar" class="btn btn-success" onclick="AddQuestao('tabela-de-lacuna')" />
                </div>
            }
        </div>
    </div>
    <div class="col-xs-12 col-md-6">
        <table id="lacuna-listagem" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Título</th>
                    <th>Enunciado</th>
                    <th>Peso Nota</th>
                    <th>Ações</th>
                </tr>
            </thead>            
        </table>
    </div>
</div>

<script>    
    $('#tabela-de-lacunaFrase').mouseup(function () {        
        if (this.selectionStart != this.selectionEnd) {
            console.log(this.selectionStart);
            console.log(this.value.substring(this.selectionStart, this.selectionEnd));
        }
    });
</script>

<script>
    var CL = { //controle lacuna
        _shadow: document.getElementById('tabela-de-lacunaFrase-shadow'),
        _Frase: '',
        Fragmentos: [],
        set Frase(value){
            value = value.replace(new RegExp('<div>', 'g'), "<br>").replace(new RegExp('</div>', 'g'), "");
            if(value > 2 && value.substring(value.length-3, value.length-1) === "<br>")
                value = value.substring(0, value.length-4);
            this.Fragmentos = [];
            this._shadow.innerHTML = this._Frase = value;
        },
        setFragmento: function(o, f, event){
            this.Fragmentos[this.Fragmentos.length] = { origem: o, fim: f };
            this.Fragmentos.sort(function(a, b){return a.origem - b.origem});
            var txt = this._Frase;
            for(var i = this.Fragmentos.length - 1; i >= 0; i--){
                var aux = txt.substring(0, this.Fragmentos[i].fim + 1) + "</span>" + txt.slice(this.Fragmentos[i].fim + 1);
                aux = aux.substring(0, this.Fragmentos[i].origem) + "<span class='elemento-lacuna-escolhido'>" + aux.slice(this.Fragmentos[i].origem);
                txt = aux;
            }
            this._shadow.innerHTML = txt;
            event.stopPropagation();
            
            var el = document.getElementById("palavras-certas-lacuna-span");
            var s = document.createElement("span");
            s.classList.add("palavra-certa-lacuna");
            s.innerHTML = "<span class='close-btn-lacuna' onclick='CL.deleteMyFragmento(" + o + ", " + f + ", this);'>×</span>" + el.innerText;
            el.insertAdjacentElement("beforebegin", s);
            el.innerHTML = "";
        },
        setMarcacao: function(texto_digitado){
            var copy = this.Fragmentos;
            var txt = this._Frase;
            var finalN = this._Frase.length;

            for(var i = copy.length - 1; i >= 0; i--){
                var aux = this.checkMarcacao(copy[i].fim+1, finalN, txt, texto_digitado);
                finalN = copy[i].origem - 1;
                aux = aux.substring(0, copy[i].fim + 1) + "</span>" + aux.slice(copy[i].fim + 1);
                aux = aux.substring(0, copy[i].origem) +
                    "<span class='elemento-lacuna-escolhido'>" +
                    aux.slice(copy[i].origem);
                txt = aux;
            }
            if(copy.length == 0)
                txt = this.checkMarcacao(0, finalN, txt, texto_digitado);
            else if(copy[0].origem > 0)
                txt = this.checkMarcacao(0, copy[0].origem - 1, txt, texto_digitado);
            this._shadow.innerHTML = txt;
        },
        checkMarcacao: function(o, f, txt, texto_digitado){
            var substr = txt.substring(o, f);
            if(texto_digitado != "" && texto_digitado != " "){
                while(substr.match(texto_digitado) && substr.match(texto_digitado).length > 0){
                    var lastIndex = substr.lastIndexOf(texto_digitado);
                    var _o = lastIndex + o;
                    var _f = _o + texto_digitado.length - 1;
                    substr = substr.replaceLast(
                        texto_digitado,
                        '<span class="elemento-lacuna-selecionado" onclick="CL.setFragmento(' + _o + ', ' + _f + ', event)">' +
                            "❂"+
                        '</span>'
                    );
                    console.log(1);
                }
                substr = substr.replace(new RegExp("❂", 'g'),
                    texto_digitado
                );
                
            }
            return txt.substring(0, o) + substr +  txt.substring(f, txt.length);
        },
        deleteMyFragmento: function(o, f, el){
            for(var i = this.Fragmentos.length - 1; i >= 0; i--)
                if(this.Fragmentos[i].origem == o && this.Fragmentos[i].fim == f){
                    this.Fragmentos.splice(i, 1);
                    break;
                }
            var txt = this._Frase;
            for(var i = this.Fragmentos.length - 1; i >= 0; i--){
                var aux = txt.substring(0, this.Fragmentos[i].fim + 1) + "</span>" + txt.slice(this.Fragmentos[i].fim + 1);
                aux = aux.substring(0, this.Fragmentos[i].origem) + "<span class='elemento-lacuna-escolhido'>" + aux.slice(this.Fragmentos[i].origem);
                txt = aux;
            }
            this._shadow.innerHTML = txt;
            deleteMyFather(el);
        }
    }

    function ChangeInputTextLacuna(el){
        CL.Frase = el.innerHTML;
    }

    function ChangeInputOpcoesLacuna(el, event){
        CL.setMarcacao(el.innerHTML);
    }

    function focusIn(){
        document.getElementById("palavras-certas-lacuna").classList.add("highlight-lacuna");
    }
    function focusOut(){
        document.getElementById("palavras-certas-lacuna").classList.remove("highlight-lacuna");
    }
    function hideShadow(){
        document.getElementById("tabela-de-lacunaFrase").style.display = "block";
        document.getElementById("tabela-de-lacunaFrase-shadow").style.display = "none";
    }
    function showShadow(){
        document.getElementById("tabela-de-lacunaFrase").style.display = "none";
        document.getElementById("tabela-de-lacunaFrase-shadow").style.display = "block";
    }
    function hideandfocus(){
        hideShadow();
        moveCursorToEnd(document.getElementById('tabela-de-lacunaFrase'));
    }
    function deleteMyFather(el){
        el.parentNode.parentNode.removeChild(el.parentNode);
    }
    function moveCursorToEnd(el) {
        el.focus();
    }
    String.prototype.reverse = function () {
        return this.split('').reverse().join('');
    };

    String.prototype.replaceLast = function (what, replacement) {
        return this.reverse().replace(new RegExp(what.reverse()), replacement.reverse()).reverse();
    };
</script>