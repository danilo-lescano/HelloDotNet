@model tacertoforms.Models.Instituicao

@{
    ViewBag.Title = "Create";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Criação de Instituição
        </h1>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Início</a>
            </li>
            <li class="active">
                <a href="@Url.Action("Index", "Instituicaos")">Instituições</a>
            </li>
        </ol>
    </section>

    <section class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Novo Registro</h3>
                <a href="@Url.Action("Index", "Instituicaos")" class="btn btn-sm btn-default btn-flat pull-right">Voltar</a>
            </div>

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-instituicao" }))
            {
                @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="col-xs-12">
                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group col-xs-12 col-md-6">
                        @Html.Label("Razão Social")
                        @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-xs-12 col-md-6">
                        @Html.Label("Nome Fantasia")
                        @Html.EditorFor(model => model.NomeFantasia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomeFantasia, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-xs-12 col-md-6">
                        @Html.Label("CNPJ")
                        @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control cnpj" } })
                        @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-xs-12 col-md-6">
                        @Html.Label("Email")
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-xs-12 col-md-6">
                        @Html.Label("Telefone")
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group col-xs-12">
                        <h3 class="box-title">Endereço Principal</h3>
                        O "Endereço Principal" é o mesmo "Endereço de Cobrança"?
                        Sim:  @Html.RadioButton("EqualEnderecoCobranca", true, true)
                        Não:  @Html.RadioButton("EqualEnderecoCobranca", false)
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("CEP")
                        @Html.TextBox("CEPPrincipal", null, new { @class = "form-control cep", @id = "cep-principal", @required = "required" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("País")
                        @Html.TextBox("PaisPrincipal", null, new { @class = "form-control", @id = "pais-principal", @required = "required" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Logradouro")
                        @Html.TextBox("LogradouroPrincipal", null, new { @class = "form-control", @id = "logradouro-principal", @required = "required" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Complemento")
                        @Html.TextBox("ComplementoPrincipal", null, new { @class = "form-control", @id = "complemento-principal" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Número")
                        @Html.TextBox("NumeroPrincipal", null, new { @class = "form-control", @type = "number", @id = "numero-principal", @required = "required" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Bairro")
                        @Html.TextBox("BairroPrincipal", null, new { @class = "form-control", @id = "bairro-principal", @required = "required" })
                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Estado")
                        @Html.DropDownList("UFPrincipal",
                        new SelectList(new List<String>()),
                        "Estado",
                        new { @class = "form-control", @id = "estado-principal", @required = "required" })

                    </div>
                    <div class="form-group col-xs-12 col-md-3">
                        @Html.Label("Cidade")
                        @Html.DropDownList("CidadePrincipal",
                        new SelectList(new List<String>()),
                        "Cidade",
                        new { @class = "form-control", @id = "cidade-principal", @required = "required" })
                    </div>
                    <div id="cobranca" style="display: none">
                        <div class="form-group col-xs-12">
                            <h3 class="box-title">Endereço de Cobrança</h3>
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("CEP")
                            @Html.TextBox("CEPCobranca", null, new { @class = "form-control cep", @id = "cep-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("País")
                            @Html.TextBox("PaisCobranca", null, new { @class = "form-control", @id = "pais-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Logradouro")
                            @Html.TextBox("LogradouroCobranca", null, new { @class = "form-control", @id = "logradouro-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Complemento")
                            @Html.TextBox("ComplementoCobranca", null, new { @class = "form-control", @id = "complemento-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Número")
                            @Html.TextBox("NumeroCobranca", null, new { @class = "form-control", @type = "number", @id = "numero-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Bairro")
                            @Html.TextBox("BairroCobranca", null, new { @class = "form-control", @id = "bairro-cobranca" })
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Estado")
                            @Html.DropDownList("UFCobranca",
                            new SelectList(new List<String>()),
                            "Estado",
                            new { @class = "form-control", @id = "estado-cobranca" })

                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            @Html.Label("Cidade")
                            @Html.DropDownList("CidadeCobranca",
                            new SelectList(new List<String>()),
                            "Cidade",
                            new { @class = "form-control", @id = "cidade-cobranca" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <input type="submit" value="Salvar" class="btn btn-primary pull-right" />
        </div>
        }
    </div>
</section>
</div>


<script>
    new dgCidadesEstados({estado: $('#estado-principal')[0], cidade: $('#cidade-principal')[0]});
    new dgCidadesEstados({estado: $('#estado-cobranca')[0],	cidade: $('#cidade-cobranca')[0]});

    $('.cep').inputmask("99.999-999");
    $('.cnpj').inputmask("99.999.999/9999-99");
    $('.telefone').inputmask("(99) 9999-9999");       

    $('#form-instituicao input').on('change', function() {
        var selection_radio = $('input[name=EqualEnderecoCobranca]:checked', '#form-instituicao').val();                
        if (selection_radio == "True") {
            $('#cobranca').hide();
            $('#cep-cobranca').attr('required', false);
            $('#pais-cobranca').attr('required', false);
            $('#logradouro-cobranca').attr('required', false);            
            $('#numero-cobranca').attr('required', false);
            $('#bairro-cobranca').attr('required', false);
            $('#estado-cobranca').attr('required', false);
            $('#cidade-cobranca').attr('required', false);
        } else {
            $('#cobranca').show();  
            $('#cep-cobranca').attr('required', 'required');
            $('#pais-cobranca').attr('required', 'required');
            $('#logradouro-cobranca').attr('required', 'required');            
            $('#numero-cobranca').attr('required', 'required');
            $('#bairro-cobranca').attr('required', 'required');
            $('#estado-cobranca').attr('required', 'required');
            $('#cidade-cobranca').attr('required', 'required');
        }
    });

    $('#cep-principal').on('blur', function () {        
        popula_cep(
            $('#cep-principal'),
            $('#logradouro-principal'),
            $('#bairro-principal'),
            $('#cidade-principal'),
            $('#estado-principal')
        );
    });

     $('#cep-cobranca').on('blur', function () {        
        popula_cep(
            $('#cep-cobranca'),
            $('#logradouro-cobranca'),
            $('#bairro-cobranca'),
            $('#cidade-cobranca'),
            $('#estado-cobranca')
        );
    });
</script>