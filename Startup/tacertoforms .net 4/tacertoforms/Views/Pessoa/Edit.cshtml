@model TaCertoForms.Models.Pessoa

@{
    ViewBag.Title = "Edit";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Edição de Pessoas
        </h1>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Início</a>
            </li>
            <li class="active">
                <a href="@Url.Action("Index", "Pessoa")">Pessoas</a>
            </li>
        </ol>
    </section>

    <section class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Edição de Registro</h3>
                <a href="@Url.Action("Index", "Pessoa")" class="btn btn-sm btn-default btn-flat pull-right">Voltar</a>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-pessoa", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="box-body">
                    <div class="col-xs-12">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.IdPessoa)

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("Instituição")
                                @Html.DropDownListFor(model => model.IdInstituicao, ViewBag.InstituicaoList as SelectList, "Instituição", new { @class = "form-control", @id = "instituicao-select", @required = "required" })
                                @Html.ValidationMessageFor(model => model.IdInstituicao, "", new { @class = "error" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("Perfil")
                                @Html.EnumDropDownListFor(
                                 model => model.Perfil,
                                 "Perfil",
                                 new { @class = "form-control", @id = "perfil-select", @required = "required" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("Nome")
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("CPF")
                                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control cpf", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("Email")
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3">
                                @Html.Label("Senha")
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-md-6">
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.Label("Foto Perfil")
                                        @Html.TextBox("Foto Perfil", null, new { @type = "file", @id = "input-file" })
                                    </div>
                                    <div class="col-md-6">
                                        <div class="foto-perfil">
                                            @if (ViewBag.Midia != null)
                                            {
                                                @MidiasHelper.showImage(ViewBag.Midia, null, null, "100%")
                                                @MidiasHelper.showRemoveImage(ViewBag.Midia, "fa fa-remove")
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="autor-fields" style="display: none">
                                <div class="form-group col-xs-12">
                                    <h3 class="box-title">Vínculo de disciplinas</h3>
                                </div>
                                <div class="form-group col-xs-12 col-md-3">
                                    <div class="turmas">
                                        @Html.Label("Turma")
                                        @Html.DropDownList("Turma",
                                        new SelectList(new List<String>()),
                                        "Turma",
                                        new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group col-xs-12 col-md-3">
                                    <div class="disciplinas">
                                        @Html.Label("Disciplina")
                                        @Html.DropDownList("Disciplina",
                                        new SelectList(new List<String>()),
                                        "Disciplina",
                                        new { @class = "form-control" })
                                    </div>
                                    <button class="btn btn-flat btn-success pull-right" style="margin-top: 20px" id="btn-vincular-disciplina">Vincular</button>
                                </div>
                                <div class="form-group col-xs-12 col-md-6">
                                    <div class="turmas-disciplinas"></div>
                                </div>
                            </div>

                            <div class="alunos-fields" style="display: none">
                                <div class="form-group col-xs-12">
                                    <h3 class="box-title">Vínculo de turmas</h3>
                                </div>
                                <div class="form-group col-xs-12 col-md-6">
                                    <div class="turmas">
                                        @Html.Label("Turma")
                                        @Html.DropDownList("Turma",
                                        new SelectList(new List<String>()),
                                        "Turma",
                                        new { @class = "form-control" })
                                    </div>
                                    <button class="btn btn-flat btn-success pull-right" style="margin-top: 20px" id="btn-vincular-turma">Vincular</button>
                                </div>
                                <div class="form-group col-xs-12 col-md-6">
                                    <div class="turmas-alunos"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <input type="submit" value="Salvar" class="btn btn-primary pull-right" />
                </div>
            }
        </div>
    </section>
</div>   

<script>
    $(document).ready(function () {
        //******************* Validações *******************
        $('.cpf').inputmask("999.999.999-99");
        $('#perfil-select').on('change', function () {
            if ($(this).val() == 1) {
                $('.alunos-fields').hide();
                $('.autor-fields').show();
            } else if ($(this).val() == 2) {
                $('.alunos-fields').show();
                $('.autor-fields').hide();
            } else {
                $('.alunos-fields').hide();
                $('.autor-fields').hide();
            }
        }).change();

        function validacoes_autores() {
            var turmas = $('#turmas-select').val();
            var disciplinas = $('#disciplinas-select').val();
            if (turmas == '' || disciplinas == '') {
                alert('Por favor, preencha o vínculo de turma e disciplina.');
                return false;
            }
            return true;
        }

        function validacoes_alunos() {
            var turmas = $('#turmas-select').val();            
            if (turmas == '') {
                alert('Por favor, preencha o vínculo de turma.');
                return false;
            }
            return true;
        }

        //******************* Ajax Autores *******************
        $('#instituicao-select').on('change', function () {
            if ($(this).val() != '') {
                atualizar_turmas($(this).val());
            } else {
                $('#turmas-select').find('option').remove().end().append('<option value="">Turma</option>').val('');
            }
        }).change();

        $('.turmas').on('change', '#turmas-select', function () {
            if ($(this).val() != '') {
                atualizar_disciplinas($(this).val());
            } else {
                $('#disciplinas-select').find('option').remove().end().append('<option value="">Disciplina</option>').val('');
            }
        });

        function atualizar_turmas(IdInstituicao) {
             $.ajax({
                url: '@Url.Action("AjaxTurmas", "Turma")',
                 data: {
                     IdInstituicao: IdInstituicao
                },
                cache: false,
                dataType: 'html',
                success: function (data) {
                    $('.turmas').html(data);
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }

        function atualizar_disciplinas(IdTurma) {
             $.ajax({
                url: '@Url.Action("AjaxDisciplinas", "Disciplina")',
                 data: {
                     IdTurma: IdTurma
                },
                cache: false,
                dataType: 'html',
                success: function (data) {
                    $('.disciplinas').html(data);
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }

        function atualizar_turmas_disciplinas() {
             $.ajax({
                url: '@Url.Action("AjaxTurmasDisciplinas", "Turma")',
                data: {
                     IdAutor: "@Html.Raw(Model.IdPessoa)"
                },
                cache: false,
                success: function (data) {
                    $('.turmas-disciplinas').html(data);
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }
        atualizar_turmas_disciplinas();

        function salvar_turma_disciplina(IdAutor, IdDisciplinaTurma) {
             $.ajax({
                url: '@Url.Action("SalvarTurmaDisciplina", "Turma")',
                 data: {
                     IdAutor: IdAutor,
                     IdDisciplinaTurma: IdDisciplinaTurma
                },
                cache: false,
                type: 'post',
                success: function () {
                    atualizar_turmas_disciplinas();
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }

        $('#btn-vincular-disciplina').on('click', function (e) {
            e.preventDefault();
            validacoes_autores();
            //TODO validar seleção turma e disciplina já cadastrada
            var IdAutor = "@Html.Raw(Model.IdPessoa)";
            var IdDisciplinaTurma = $('.autor-fields').find('#disciplinas-select').val();
            salvar_turma_disciplina(IdAutor, IdDisciplinaTurma);
        });

        $('.turmas-disciplinas').on('click', '.btn-remover-tdp', function () {              
              $.ajax({
                  url: '@Url.Action("AjaxDesvincularTurmaDisciplina", "Turma")',
                  data: {
                      id: $(this).attr('idtdp')
                  },
                  cache: false,
                  type: 'post',
                  success: function () {
                      atualizar_turmas_disciplinas();
                  },
                  error: function () {
                      alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                  }
            });
        });

        //******************* Ajax Alunos *******************
         function atualizar_turmas_alunos() {
             $.ajax({
                url: '@Url.Action("AjaxTurmasAlunos", "Turma")',
                data: {
                     IdPessoa: "@Html.Raw(Model.IdPessoa)"
                },
                cache: false,
                success: function (data) {
                    $('.turmas-alunos').html(data);
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }
        atualizar_turmas_alunos();

        function salvar_turma_aluno(IdPessoa, IdTurma) {
             $.ajax({
                url: '@Url.Action("SalvarTurmaAluno", "Turma")',
                 data: {
                     IdPessoa: IdPessoa,
                     IdTurma: IdTurma
                },
                cache: false,
                type: 'post',
                success: function () {
                   atualizar_turmas_alunos();
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }
        $('#btn-vincular-turma').on('click', function (e) {
            e.preventDefault();
            validacoes_alunos();
            //TODO validar seleção turma já cadastrada
            var IdPessoa = "@Html.Raw(Model.IdPessoa)";
            var IdTurma = $('.alunos-fields').find('#turmas-select').val();
            salvar_turma_aluno(IdPessoa, IdTurma);
        });

         $('.turmas-alunos').on('click', '.btn-remover-ta', function () {              
              $.ajax({
                  url: '@Url.Action("AjaxDesvincularTurmaAluno", "Turma")',
                  data: {
                      id: $(this).attr('idta')
                  },
                  cache: false,
                  type: 'post',
                  success: function () {
                      atualizar_turmas_alunos();
                  },
                  error: function () {
                      alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                  }
            });
         });

         //Deletando imagem logo empresa
    $('.foto-perfil').on('click', '.btn-single-remove', function () {
        $.ajax({
            url: '@Url.Action("Delete", "Midia")',
            data: {
                id: $(this).attr('id')                
            },
            cache: false,                        
            success: function (data) {                
                if (data == "True") {
                    $('.foto-perfil').html('');
                } else {
                    alert('Falha ao deletar imagem. Por favor, entre em contato com o administrador do sistema.');
                }
            },
            error: function () {
                alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
            }
        });    
    });  

    $('#input-file').on('change', function (e) {
        var files = e.target.files;            
        if (files.length > 0) {
           if (window.FormData !== undefined) {
               var data = new FormData();
               for (var x = 0; x < files.length; x++){
                   data.append("file" + x, files[x]);
               }
               $.ajax({
                   type: 'POST',
                   url: '@Url.Action("Save", "Midia")' + '?id=' + '@Html.Raw(Model.IdPessoa)' + "&tabela=Pessoa" ,
                   contentType: false,
                   processData: false,
                   data: data,
                   success: function (result) {                            
                       midiaCreateSingleImage($('.foto-perfil'), result[0]);
                   },
                   error: function (xhr, status, p3, p4){
                       var err = "Error " + " " + status + " " + p3 + " " + p4;
                       if (xhr.responseText && xhr.responseText[0] == "{")
                           err = JSON.parse(xhr.responseText).Message;
                           console.log(err);
                        }
                    });               
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
              }
         }
    });
    });
</script>